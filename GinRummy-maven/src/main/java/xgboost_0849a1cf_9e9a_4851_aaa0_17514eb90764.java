/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2020-06-11T17:14:09.332-04:00
  3.30.0.4
  
  Standalone prediction code with sample test data for XGBoostModel named xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://192.168.1.200:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://192.168.1.200:54321/3/Models.java/xgboost-0849a1cf-9e9a-4851-aaa0-17514eb90764 > xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764", algorithm="xgboost")
public class xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Regression; }

  public boolean isSupervised() { return true; }
  public int nclasses() { return 1; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764.VALUES;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* current_player_deadwood */ null,
    /* num_melds */ null,
    /* turns_taken */ null,
    /* current_player_end_hand_score_advantage */ null
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = null;
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764() { super(NAMES,DOMAINS,"current_player_end_hand_score_advantage"); }
  public String getUUID() { return Long.toString(1101518011691044928L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    float preds_0 = 0f;
    preds_0 += xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_0.score0(data);
    preds_0 += xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_1.score0(data);
    preds_0 += xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_2.score0(data);
    preds_0 += xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_3.score0(data);
    preds_0 += xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_4.score0(data);
    preds_0 += xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_5.score0(data);
    preds_0 += xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_6.score0(data);
    preds_0 += xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_7.score0(data);
    preds_0 += xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_8.score0(data);
    preds_0 += xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_9.score0(data);
    preds_0 += 0.5f;
    preds[0] = preds_0;
    preds[0] = (float) preds[0];
    return preds;
  }
}
// The class representing training column names
class NamesHolder_xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    NamesHolder_xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_0.fill(VALUES);
  }
  static final class NamesHolder_xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "current_player_deadwood";
      sa[1] = "num_melds";
      sa[2] = "turns_taken";
    }
  }
}

class xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_0 {
  static float score0(double[] data) {
    return     ((Double.isNaN(data[1]) || ((float)data[1]) >= 1.5f) ?
      ((Double.isNaN(data[0]) || ((float)data[0]) < 10.5f) ?
        ((Double.isNaN(data[2]) || ((float)data[2]) < 7.5f) ?
          7.511379f
          :
          3.0735703f
        )
        :
        ((Double.isNaN(data[2]) || ((float)data[2]) >= 5.5f) ?
          1.3442342f
          :
          3.3963413f
        )
      )
      :
      ((Double.isNaN(data[1]) || ((float)data[1]) >= 0.5f) ?
        ((Double.isNaN(data[2]) || ((float)data[2]) >= 3.5f) ?
          -0.861782f
          :
          0.3781089f
        )
        :
        ((Double.isNaN(data[2]) || ((float)data[2]) >= 1.5f) ?
          -2.9038265f
          :
          -1.7157602f
        )
      )
    );
  }
}

class xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_1 {
  static float score0(double[] data) {
    return     ((Double.isNaN(data[1]) || ((float)data[1]) >= 1.5f) ?
      ((Double.isNaN(data[0]) || ((float)data[0]) < 0.5f) ?
        ((Double.isNaN(data[2]) || ((float)data[2]) >= 11.5f) ?
          11.048834f
          :
          14.257676f
        )
        :
        ((Double.isNaN(data[2]) || ((float)data[2]) < 7.5f) ?
          2.576528f
          :
          1.1015245f
        )
      )
      :
      ((Double.isNaN(data[1]) || ((float)data[1]) >= 0.5f) ?
        ((Double.isNaN(data[2]) || ((float)data[2]) >= 1.5f) ?
          -0.5004484f
          :
          0.8884579f
        )
        :
        ((Double.isNaN(data[2]) || ((float)data[2]) >= 3.5f) ?
          -2.2495282f
          :
          -1.5229995f
        )
      )
    );
  }
}

class xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_2 {
  static float score0(double[] data) {
    return     ((Double.isNaN(data[0]) || ((float)data[0]) < 15.5f) ?
      ((Double.isNaN(data[2]) || ((float)data[2]) < 9.5f) ?
        ((Double.isNaN(data[0]) || ((float)data[0]) < 10.5f) ?
          4.0134273f
          :
          2.027604f
        )
        :
        ((Double.isNaN(data[0]) || ((float)data[0]) >= 0.5f) ?
          0.79950434f
          :
          8.149652f
        )
      )
      :
      ((Double.isNaN(data[1]) || ((float)data[1]) >= 0.5f) ?
        ((Double.isNaN(data[2]) || ((float)data[2]) >= 5.5f) ?
          -0.5623258f
          :
          0.30186453f
        )
        :
        ((Double.isNaN(data[2]) || ((float)data[2]) >= 1.5f) ?
          -1.4445672f
          :
          -0.7447689f
        )
      )
    );
  }
}

class xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_3 {
  static float score0(double[] data) {
    return     ((Double.isNaN(data[0]) || ((float)data[0]) < 19.5f) ?
      ((Double.isNaN(data[2]) || ((float)data[2]) < 5.5f) ?
        ((Double.isNaN(data[0]) || ((float)data[0]) < 10.5f) ?
          4.70269f
          :
          1.9304742f
        )
        :
        ((Double.isNaN(data[0]) || ((float)data[0]) >= 6.5f) ?
          0.49317923f
          :
          2.3789377f
        )
      )
      :
      ((Double.isNaN(data[1]) || ((float)data[1]) >= 0.5f) ?
        ((Double.isNaN(data[2]) || ((float)data[2]) >= 3.5f) ?
          -0.4723648f
          :
          0.29589933f
        )
        :
        ((Double.isNaN(data[2]) || ((float)data[2]) >= 3.5f) ?
          -1.141568f
          :
          -0.708377f
        )
      )
    );
  }
}

class xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_4 {
  static float score0(double[] data) {
    return     ((Double.isNaN(data[0]) || ((float)data[0]) < 12.5f) ?
      ((Double.isNaN(data[2]) || ((float)data[2]) < 13.5f) ?
        ((Double.isNaN(data[2]) || ((float)data[2]) >= 3.5f) ?
          1.4446667f
          :
          4.294764f
        )
        :
        ((Double.isNaN(data[0]) || ((float)data[0]) >= 0.5f) ?
          0.067263156f
          :
          4.5845675f
        )
      )
      :
      ((Double.isNaN(data[0]) || ((float)data[0]) >= 30.5f) ?
        ((Double.isNaN(data[2]) || ((float)data[2]) >= 1.5f) ?
          -0.57335126f
          :
          0.102785796f
        )
        :
        ((Double.isNaN(data[2]) || ((float)data[2]) >= 9.5f) ?
          -0.37591118f
          :
          0.4811303f
        )
      )
    );
  }
}

class xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_5 {
  static float score0(double[] data) {
    return     ((Double.isNaN(data[0]) || ((float)data[0]) < 18.5f) ?
      ((Double.isNaN(data[2]) || ((float)data[2]) < 3.5f) ?
        ((Double.isNaN(data[0]) || ((float)data[0]) < 9.5f) ?
          4.6825557f
          :
          2.1014113f
        )
        :
        ((Double.isNaN(data[0]) || ((float)data[0]) >= 0.5f) ?
          0.38430688f
          :
          5.541216f
        )
      )
      :
      ((Double.isNaN(data[2]) || ((float)data[2]) >= 7.5f) ?
        ((Double.isNaN(data[0]) || ((float)data[0]) >= 31.5f) ?
          -0.8443128f
          :
          -0.3287892f
        )
        :
        ((Double.isNaN(data[0]) || ((float)data[0]) >= 38.5f) ?
          -0.34515467f
          :
          0.18477029f
        )
      )
    );
  }
}

class xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_6 {
  static float score0(double[] data) {
    return     ((Double.isNaN(data[0]) || ((float)data[0]) < 13.5f) ?
      ((Double.isNaN(data[2]) || ((float)data[2]) < 11.5f) ?
        ((Double.isNaN(data[0]) || ((float)data[0]) < 0.5f) ?
          5.6484904f
          :
          0.9371983f
        )
        :
        ((Double.isNaN(data[0]) || ((float)data[0]) >= 2.5f) ?
          0.0019041535f
          :
          1.2889556f
        )
      )
      :
      ((Double.isNaN(data[2]) || ((float)data[2]) >= 3.5f) ?
        ((Double.isNaN(data[0]) || ((float)data[0]) >= 54.5f) ?
          -0.9808948f
          :
          -0.17023724f
        )
        :
        ((Double.isNaN(data[0]) || ((float)data[0]) >= 21.5f) ?
          0.025262753f
          :
          1.5313317f
        )
      )
    );
  }
}

class xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_7 {
  static float score0(double[] data) {
    return     ((Double.isNaN(data[0]) || ((float)data[0]) < 7.5f) ?
      ((Double.isNaN(data[2]) || ((float)data[2]) >= 17.5f) ?
        ((Double.isNaN(data[0]) || ((float)data[0]) < 1.5f) ?
          0.8004084f
          :
          -0.48167866f
        )
        :
        ((Double.isNaN(data[2]) || ((float)data[2]) >= 2.5f) ?
          1.161054f
          :
          4.985512f
        )
      )
      :
      ((Double.isNaN(data[0]) || ((float)data[0]) >= 30.5f) ?
        ((Double.isNaN(data[2]) || ((float)data[2]) >= 5.5f) ?
          -0.42765862f
          :
          -0.089539364f
        )
        :
        ((Double.isNaN(data[2]) || ((float)data[2]) >= 11.5f) ?
          -0.26077858f
          :
          0.25910485f
        )
      )
    );
  }
}

class xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_8 {
  static float score0(double[] data) {
    return     ((Double.isNaN(data[0]) || ((float)data[0]) < 21.5f) ?
      ((Double.isNaN(data[2]) || ((float)data[2]) >= 14.5f) ?
        ((Double.isNaN(data[0]) || ((float)data[0]) < 13.5f) ?
          -0.14193495f
          :
          -0.512419f
        )
        :
        ((Double.isNaN(data[2]) || ((float)data[2]) >= 1.5f) ?
          0.30792022f
          :
          2.3214438f
        )
      )
      :
      ((Double.isNaN(data[2]) || ((float)data[2]) >= 1.5f) ?
        ((Double.isNaN(data[0]) || ((float)data[0]) >= 54.5f) ?
          -0.43860328f
          :
          -0.12880868f
        )
        :
        ((Double.isNaN(data[1]) || ((float)data[1]) >= 1.5f) ?
          1.8714167f
          :
          0.15931547f
        )
      )
    );
  }
}

class xgboost_0849a1cf_9e9a_4851_aaa0_17514eb90764_Tree_g_0_t_9 {
  static float score0(double[] data) {
    return     ((Double.isNaN(data[0]) || ((float)data[0]) < 8.5f) ?
      ((Double.isNaN(data[2]) || ((float)data[2]) >= 5.5f) ?
        ((Double.isNaN(data[0]) || ((float)data[0]) < 0.5f) ?
          2.486381f
          :
          0.34254712f
        )
        :
        ((Double.isNaN(data[0]) || ((float)data[0]) >= 2.5f) ?
          1.448437f
          :
          3.525767f
        )
      )
      :
      ((Double.isNaN(data[2]) || ((float)data[2]) >= 7.5f) ?
        ((Double.isNaN(data[0]) || ((float)data[0]) >= 36.5f) ?
          -0.48657218f
          :
          -0.10925404f
        )
        :
        ((Double.isNaN(data[1]) || ((float)data[1]) >= 0.5f) ?
          0.14946412f
          :
          -0.22689348f
        )
      )
    );
  }
}

