2020-06-16 14:15:38,702 - [INFO] - from org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST in main
                
Load data....

2020-06-16 14:15:38,708 - [INFO] - from org.deeplearning4j.datasets.base.MnistFetcher in main
                
Downloading MNIST...

2020-06-16 14:15:41,868 - [INFO] - from org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST in main
                
Build model....

2020-06-16 14:15:41,902 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-16 14:15:45,650 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-16 14:15:45,656 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-16 14:15:45,656 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-16 14:15:45,656 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-16 14:15:45,656 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-16 14:15:45,656 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-16 14:15:45,822 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-16 14:15:45,933 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-16 14:15:45,933 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [16.0GB];

2020-06-16 14:15:45,933 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-16 14:15:45,973 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

2020-06-16 14:15:46,029 - [INFO] - from org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST in main
                
Train model...

2020-06-16 14:15:46,180 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 0 is 2.4743148929526906

2020-06-16 14:15:46,827 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 10 is 1.1818032361490796

2020-06-16 14:15:47,442 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 20 is 0.570531356415932

2020-06-16 14:15:48,072 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 30 is 0.6280287684018451

2020-06-16 14:15:48,670 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 40 is 0.4218240941998268

2020-06-16 14:15:49,298 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 50 is 0.40162119677403085

2020-06-16 14:15:49,895 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 60 is 0.5230878066297572

2020-06-16 14:15:50,492 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 70 is 0.4604616970058165

2020-06-16 14:15:51,087 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 80 is 0.3775124944596863

2020-06-16 14:15:51,683 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 90 is 0.288347025615582

2020-06-16 14:15:52,280 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 100 is 0.4740683193092494

2020-06-16 14:15:52,866 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 110 is 0.293175471857252

2020-06-16 14:15:53,447 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 120 is 0.18156328001256808

2020-06-16 14:15:54,038 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 130 is 0.3951500058894467

2020-06-16 14:15:54,619 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 140 is 0.31763218274574356

2020-06-16 14:15:55,199 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 150 is 0.30479569787163735

2020-06-16 14:15:55,782 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 160 is 0.33050602749702024

2020-06-16 14:15:56,362 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 170 is 0.25847790337219767

2020-06-16 14:15:56,943 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 180 is 0.3093920260303097

2020-06-16 14:15:57,522 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 190 is 0.20334954267536712

2020-06-16 14:15:58,112 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 200 is 0.22816045061166312

2020-06-16 14:15:58,690 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 210 is 0.1974628444777795

2020-06-16 14:15:59,267 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 220 is 0.2905595302551166

2020-06-16 14:15:59,843 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 230 is 0.28452904496247683

2020-06-16 14:16:00,425 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 240 is 0.2093848346330462

2020-06-16 14:16:01,010 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 250 is 0.3372391846663496

2020-06-16 14:16:01,587 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 260 is 0.2723636319314742

2020-06-16 14:16:02,171 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 270 is 0.1972175228418044

2020-06-16 14:16:02,742 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 280 is 0.4682907661877792

2020-06-16 14:16:03,316 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 290 is 0.22967922737016425

2020-06-16 14:16:03,888 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 300 is 0.21904413800056455

2020-06-16 14:16:04,463 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 310 is 0.3095028250490035

2020-06-16 14:16:05,041 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 320 is 0.16973446213652338

2020-06-16 14:16:05,614 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 330 is 0.24688238148852545

2020-06-16 14:16:06,186 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 340 is 0.19297563896255104

2020-06-16 14:16:06,760 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 350 is 0.2639541338739337

2020-06-16 14:16:07,334 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 360 is 0.3449487855524519

2020-06-16 14:16:07,914 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 370 is 0.29500741963391847

2020-06-16 14:16:08,497 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 380 is 0.15426059602948516

2020-06-16 14:16:09,069 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 390 is 0.19114420902470308

2020-06-16 14:16:09,640 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 400 is 0.23429136782252075

2020-06-16 14:16:10,211 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 410 is 0.3091915352711053

2020-06-16 14:16:10,785 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 420 is 0.3085412437726808

2020-06-16 14:16:11,358 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 430 is 0.1737106400042126

2020-06-16 14:16:11,927 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 440 is 0.3145875972644301

2020-06-16 14:16:12,499 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 450 is 0.1544240222758328

2020-06-16 14:16:13,084 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 460 is 0.1352545519263702

2020-06-16 14:16:13,654 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 470 is 0.1574608120724036

2020-06-16 14:16:14,231 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 480 is 0.23101927637042874

2020-06-16 14:16:14,804 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 490 is 0.14578376937304377

2020-06-16 14:16:15,380 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 500 is 0.17652677681495976

2020-06-16 14:16:15,950 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 510 is 0.3031253004328281

2020-06-16 14:16:16,521 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 520 is 0.14470012914489644

2020-06-16 14:16:17,093 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 530 is 0.24180702043712884

2020-06-16 14:16:17,674 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 540 is 0.1729630061900123

2020-06-16 14:16:18,262 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 550 is 0.18872998582872164

2020-06-16 14:16:18,837 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 560 is 0.16581914694175226

2020-06-16 14:16:19,410 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 570 is 0.14788747451516826

2020-06-16 14:16:19,983 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 580 is 0.14185447876977653

2020-06-16 14:16:20,559 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 590 is 0.1528716307276027

2020-06-16 14:16:21,143 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 600 is 0.18508415079041363

2020-06-16 14:16:21,715 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 610 is 0.20646830648202208

2020-06-16 14:16:22,287 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 620 is 0.2054839469661207

2020-06-16 14:16:22,858 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 630 is 0.12136518096307675

2020-06-16 14:16:23,428 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 640 is 0.1384811180083995

2020-06-16 14:16:23,998 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 650 is 0.22838708703901578

2020-06-16 14:16:24,568 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 660 is 0.23245272007097734

2020-06-16 14:16:25,140 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 670 is 0.2474549112439109

2020-06-16 14:16:25,718 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 680 is 0.16911402470654258

2020-06-16 14:16:26,288 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 690 is 0.11809030152100755

2020-06-16 14:16:26,857 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 700 is 0.11964875035777563

2020-06-16 14:16:27,433 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 710 is 0.11223324589886388

2020-06-16 14:16:28,012 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 720 is 0.1211092107807411

2020-06-16 14:16:28,583 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 730 is 0.13355817125087244

2020-06-16 14:16:29,152 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 740 is 0.27260098501886415

2020-06-16 14:16:29,726 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 750 is 0.13253017485852184

2020-06-16 14:16:30,296 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 760 is 0.18337427328392075

2020-06-16 14:16:30,878 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 770 is 0.13634628770412333

2020-06-16 14:16:31,452 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 780 is 0.11676099747759174

2020-06-16 14:16:32,023 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 790 is 0.11967542712941293

2020-06-16 14:16:32,596 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 800 is 0.13854651964124196

2020-06-16 14:16:33,168 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 810 is 0.10711242238251545

2020-06-16 14:16:33,740 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 820 is 0.17957965551837385

2020-06-16 14:16:34,312 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 830 is 0.1383613681749293

2020-06-16 14:16:34,896 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 840 is 0.14405981280477284

2020-06-16 14:16:35,470 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 850 is 0.2188129406970884

2020-06-16 14:16:36,040 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 860 is 0.17995590618248594

2020-06-16 14:16:36,613 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 870 is 0.14418652451559316

2020-06-16 14:16:37,185 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 880 is 0.11007354801989132

2020-06-16 14:16:37,766 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 890 is 0.1669120244226313

2020-06-16 14:16:38,342 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 900 is 0.16918474448987547

2020-06-16 14:16:38,915 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 910 is 0.09381956963567518

2020-06-16 14:16:39,486 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 920 is 0.22555217287270918

2020-06-16 14:16:40,058 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 930 is 0.14373343204406627

2020-06-16 14:16:40,432 - [INFO] - from org.deeplearning4j.optimize.listeners.EvaluativeListener in main
                
Starting evaluation nr. 1

2020-06-16 14:16:42,628 - [INFO] - from org.deeplearning4j.optimize.listeners.EvaluativeListener in main
                
Reporting evaluation results:

2020-06-16 14:16:42,634 - [INFO] - from org.deeplearning4j.optimize.listeners.EvaluativeListener in main
                
Evaluation:


========================Evaluation Metrics========================
 # of classes:    10
 Accuracy:        0.9859
 Precision:       0.9860
 Recall:          0.9856
 F1 Score:        0.9858
Precision, recall & F1: macro-averaged (equally weighted avg. of 10 classes)


=========================Confusion Matrix=========================
    0    1    2    3    4    5    6    7    8    9
---------------------------------------------------
  968    0    2    0    0    0    5    2    2    1 | 0 = 0
    0 1128    2    0    0    1    3    1    0    0 | 1 = 1
    1    0 1027    0    0    0    0    4    0    0 | 2 = 2
    0    0    3 1002    0    1    0    3    1    0 | 3 = 3
    0    0    1    0  975    0    1    0    0    5 | 4 = 4
    2    0    1   19    0  867    1    2    0    0 | 5 = 5
    2    1    1    0    3    3  945    0    3    0 | 6 = 6
    1    2    6    3    2    0    0 1009    0    5 | 7 = 7
    1    0    3    5    3    2    0    1  952    7 | 8 = 8
    0    2    0    9    7    0    0    5    0  986 | 9 = 9

Confusion matrix format: Actual (rowClass) predicted as (columnClass) N times
==================================================================

2020-06-16 14:16:42,634 - [INFO] - from org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST in main
                
Saving model to tmp folder: /var/folders/qr/5nz9_zgs2213mpl7z6xwyk6h0000gn/T/lenetmnist.zip

2020-06-16 14:16:42,965 - [INFO] - from org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST in main
                
****************Example finished********************

2020-06-16 14:45:53,878 - [INFO] - from org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST in main
                
Load data....

2020-06-16 14:45:54,140 - [INFO] - from org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST in main
                
Build model....

2020-06-16 14:45:54,188 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-16 14:45:55,154 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-16 14:45:55,158 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-16 14:45:55,158 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-16 14:45:55,158 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-16 14:45:55,158 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-16 14:45:55,158 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-16 14:45:55,360 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-16 14:45:55,496 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-16 14:45:55,496 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-16 14:45:55,496 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-16 14:45:55,559 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

2020-06-16 14:45:55,655 - [INFO] - from org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST in main
                
Train model...

2020-06-16 14:45:55,873 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 0 is 2.4743148929526906

2020-06-16 14:45:56,616 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 10 is 1.1818032361490796

2020-06-16 14:45:57,257 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 20 is 0.570531356415932

2020-06-16 14:45:57,855 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 30 is 0.6280287684018451

2020-06-16 14:45:58,509 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 40 is 0.4218240941998268

2020-06-16 14:45:59,120 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 50 is 0.40162119677403085

2020-06-16 14:45:59,727 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 60 is 0.5230878066297572

2020-06-16 14:46:00,355 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 70 is 0.4604616970058165

2020-06-16 14:46:00,983 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 80 is 0.3775124944596863

2020-06-16 14:46:01,579 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 90 is 0.288347025615582

2020-06-16 14:46:02,181 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 100 is 0.4740683193092494

2020-06-16 14:46:02,790 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 110 is 0.293175471857252

2020-06-16 14:46:03,458 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 120 is 0.18156328001256808

2020-06-16 14:46:04,100 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 130 is 0.3951500058894467

2020-06-16 14:46:04,767 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 140 is 0.31763218274574356

2020-06-16 14:46:05,391 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 150 is 0.30479569787163735

2020-06-16 14:46:05,981 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 160 is 0.33050602749702024

2020-06-16 14:46:06,585 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 170 is 0.25847790337219767

2020-06-16 14:46:07,177 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 180 is 0.3093920260303097

2020-06-16 14:46:07,777 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 190 is 0.20334954267536712

2020-06-16 14:46:08,365 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 200 is 0.22816045061166312

2020-06-16 14:46:08,944 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 210 is 0.1974628444777795

2020-06-16 14:46:09,530 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 220 is 0.2905595302551166

2020-06-16 14:46:10,108 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 230 is 0.28452904496247683

2020-06-16 14:46:10,688 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 240 is 0.2093848346330462

2020-06-16 14:46:11,263 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 250 is 0.3372391846663496

2020-06-16 14:46:11,840 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 260 is 0.2723636319314742

2020-06-16 14:46:12,416 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 270 is 0.1972175228418044

2020-06-16 14:46:12,988 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 280 is 0.4682907661877792

2020-06-16 14:46:13,565 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 290 is 0.22967922737016425

2020-06-16 14:46:14,133 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 300 is 0.21904413800056455

2020-06-16 14:46:14,703 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 310 is 0.3095028250490035

2020-06-16 14:46:15,277 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 320 is 0.16973446213652338

2020-06-16 14:46:15,853 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 330 is 0.24688238148852545

2020-06-16 14:46:16,429 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 340 is 0.19297563896255104

2020-06-16 14:46:17,003 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 350 is 0.2639541338739337

2020-06-16 14:46:17,577 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 360 is 0.3449487855524519

2020-06-16 14:46:18,156 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 370 is 0.29500741963391847

2020-06-16 14:46:18,737 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 380 is 0.15426059602948516

2020-06-16 14:46:19,386 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 390 is 0.19114420902470308

2020-06-16 14:46:19,970 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 400 is 0.23429136782252075

2020-06-16 14:46:20,606 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 410 is 0.3091915352711053

2020-06-16 14:46:21,193 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 420 is 0.3085412437726808

2020-06-16 14:46:21,774 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 430 is 0.1737106400042126

2020-06-16 14:46:22,368 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 440 is 0.3145875972644301

2020-06-16 14:46:22,999 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 450 is 0.1544240222758328

2020-06-16 14:46:23,585 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 460 is 0.1352545519263702

2020-06-16 14:46:24,166 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 470 is 0.1574608120724036

2020-06-16 14:46:24,748 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 480 is 0.23101927637042874

2020-06-16 14:46:25,325 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 490 is 0.14578376937304377

2020-06-16 14:46:25,903 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 500 is 0.17652677681495976

2020-06-16 14:46:26,480 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 510 is 0.3031253004328281

2020-06-16 14:46:27,053 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 520 is 0.14470012914489644

2020-06-16 14:46:27,638 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 530 is 0.24180702043712884

2020-06-16 14:46:28,217 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 540 is 0.1729630061900123

2020-06-16 14:46:28,803 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 550 is 0.18872998582872164

2020-06-16 14:46:29,383 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 560 is 0.16581914694175226

2020-06-16 14:46:29,961 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 570 is 0.14788747451516826

2020-06-16 14:46:30,540 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 580 is 0.14185447876977653

2020-06-16 14:46:31,125 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 590 is 0.1528716307276027

2020-06-16 14:46:31,729 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 600 is 0.18508415079041363

2020-06-16 14:46:32,299 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 610 is 0.20646830648202208

2020-06-16 14:46:32,872 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 620 is 0.2054839469661207

2020-06-16 14:46:33,460 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 630 is 0.12136518096307675

2020-06-16 14:46:34,063 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 640 is 0.1384811180083995

2020-06-16 14:46:34,664 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 650 is 0.22838708703901578

2020-06-16 14:46:35,239 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 660 is 0.23245272007097734

2020-06-16 14:46:35,813 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 670 is 0.2474549112439109

2020-06-16 14:46:36,387 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 680 is 0.16911402470654258

2020-06-16 14:46:36,960 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 690 is 0.11809030152100755

2020-06-16 14:46:37,531 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 700 is 0.11964875035777563

2020-06-16 14:46:38,130 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 710 is 0.11223324589886388

2020-06-16 14:46:38,719 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 720 is 0.1211092107807411

2020-06-16 14:46:39,321 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 730 is 0.13355817125087244

2020-06-16 14:46:39,908 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 740 is 0.27260098501886415

2020-06-16 14:46:40,502 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 750 is 0.13253017485852184

2020-06-16 14:46:41,135 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 760 is 0.18337427328392075

2020-06-16 14:46:41,716 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 770 is 0.13634628770412333

2020-06-16 14:46:42,298 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 780 is 0.11676099747759174

2020-06-16 14:46:42,876 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 790 is 0.11967542712941293

2020-06-16 14:46:43,452 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 800 is 0.13854651964124196

2020-06-16 14:46:44,054 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 810 is 0.10711242238251545

2020-06-16 14:46:44,636 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 820 is 0.17957965551837385

2020-06-16 14:46:45,217 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 830 is 0.1383613681749293

2020-06-16 14:46:45,796 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 840 is 0.14405981280477284

2020-06-16 14:46:46,370 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 850 is 0.2188129406970884

2020-06-16 14:46:46,945 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 860 is 0.17995590618248594

2020-06-16 14:46:47,537 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 870 is 0.14418652451559316

2020-06-16 14:46:48,125 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 880 is 0.11007354801989132

2020-06-16 14:46:48,704 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 890 is 0.1669120244226313

2020-06-16 14:46:49,290 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 900 is 0.16918474448987547

2020-06-16 14:46:49,880 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 910 is 0.09381956963567518

2020-06-16 14:46:50,490 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 920 is 0.22555217287270918

2020-06-16 14:46:51,069 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 930 is 0.14373343204406627

2020-06-16 14:46:51,464 - [INFO] - from org.deeplearning4j.optimize.listeners.EvaluativeListener in main
                
Starting evaluation nr. 1

2020-06-16 14:46:54,049 - [INFO] - from org.deeplearning4j.optimize.listeners.EvaluativeListener in main
                
Reporting evaluation results:

2020-06-16 14:46:54,055 - [INFO] - from org.deeplearning4j.optimize.listeners.EvaluativeListener in main
                
Evaluation:


========================Evaluation Metrics========================
 # of classes:    10
 Accuracy:        0.9859
 Precision:       0.9860
 Recall:          0.9856
 F1 Score:        0.9858
Precision, recall & F1: macro-averaged (equally weighted avg. of 10 classes)


=========================Confusion Matrix=========================
    0    1    2    3    4    5    6    7    8    9
---------------------------------------------------
  968    0    2    0    0    0    5    2    2    1 | 0 = 0
    0 1128    2    0    0    1    3    1    0    0 | 1 = 1
    1    0 1027    0    0    0    0    4    0    0 | 2 = 2
    0    0    3 1002    0    1    0    3    1    0 | 3 = 3
    0    0    1    0  975    0    1    0    0    5 | 4 = 4
    2    0    1   19    0  867    1    2    0    0 | 5 = 5
    2    1    1    0    3    3  945    0    3    0 | 6 = 6
    1    2    6    3    2    0    0 1009    0    5 | 7 = 7
    1    0    3    5    3    2    0    1  952    7 | 8 = 8
    0    2    0    9    7    0    0    5    0  986 | 9 = 9

Confusion matrix format: Actual (rowClass) predicted as (columnClass) N times
==================================================================

2020-06-16 14:46:54,055 - [INFO] - from org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST in main
                
Saving model to tmp folder: /var/folders/qr/5nz9_zgs2213mpl7z6xwyk6h0000gn/T/lenetmnist.zip

2020-06-16 14:46:54,453 - [INFO] - from org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST in main
                
****************Example finished********************

2020-06-16 14:50:33,756 - [INFO] - from org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST in main
                
Load data....

2020-06-16 14:50:33,930 - [INFO] - from org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST in main
                
Build model....

2020-06-16 14:50:33,965 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-16 14:50:34,707 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-16 14:50:34,710 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-16 14:50:34,711 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-16 14:50:34,711 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-16 14:50:34,711 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-16 14:50:34,711 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-16 14:50:34,866 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-16 14:50:34,957 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-16 14:50:34,957 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-16 14:50:34,957 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-16 14:50:34,999 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

2020-06-16 14:50:35,070 - [INFO] - from org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST in main
                
Train model...

2020-06-16 14:50:35,379 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 0 is 2.4743148929526906

2020-06-16 14:50:36,637 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 10 is 1.1818032361490796

2020-06-16 14:50:37,428 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 20 is 0.570531356415932

2020-06-16 14:50:38,088 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 30 is 0.6280287684018451

2020-06-16 14:50:38,787 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 40 is 0.4218240941998268

2020-06-16 14:50:39,457 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 50 is 0.40162119677403085

2020-06-16 14:50:40,122 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 60 is 0.5230878066297572

2020-06-16 14:50:40,759 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 70 is 0.4604616970058165

2020-06-16 14:50:41,422 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 80 is 0.3775124944596863

2020-06-16 14:50:42,107 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 90 is 0.288347025615582

2020-06-16 14:50:42,841 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 100 is 0.4740683193092494

2020-06-16 14:50:43,552 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 110 is 0.293175471857252

2020-06-16 14:50:44,250 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 120 is 0.18156328001256808

2020-06-16 14:50:44,960 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 130 is 0.3951500058894467

2020-06-16 14:50:45,751 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 140 is 0.31763218274574356

2020-06-16 14:50:46,605 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 150 is 0.30479569787163735

2020-06-16 14:50:47,553 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 160 is 0.33050602749702024

2020-06-16 14:50:48,281 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 170 is 0.25847790337219767

2020-06-16 14:50:48,949 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 180 is 0.3093920260303097

2020-06-16 14:50:49,661 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 190 is 0.20334954267536712

2020-06-16 14:50:50,347 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 200 is 0.22816045061166312

2020-06-16 14:50:51,028 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 210 is 0.1974628444777795

2020-06-16 14:50:51,689 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 220 is 0.2905595302551166

2020-06-16 14:50:52,357 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 230 is 0.28452904496247683

2020-06-16 14:50:53,058 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 240 is 0.2093848346330462

2020-06-16 14:50:53,740 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 250 is 0.3372391846663496

2020-06-16 14:50:54,439 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 260 is 0.2723636319314742

2020-06-16 14:50:55,175 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 270 is 0.1972175228418044

2020-06-16 14:50:55,800 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 280 is 0.4682907661877792

2020-06-16 14:50:56,471 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 290 is 0.22967922737016425

2020-06-16 14:50:57,150 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 300 is 0.21904413800056455

2020-06-16 14:50:57,957 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 310 is 0.3095028250490035

2020-06-16 14:50:58,707 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 320 is 0.16973446213652338

2020-06-16 14:50:59,501 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 330 is 0.24688238148852545

2020-06-16 14:51:00,112 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 340 is 0.19297563896255104

2020-06-16 14:51:00,721 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 350 is 0.2639541338739337

2020-06-16 14:51:01,349 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 360 is 0.3449487855524519

2020-06-16 14:51:02,051 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 370 is 0.29500741963391847

2020-06-16 14:51:02,707 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 380 is 0.15426059602948516

2020-06-16 14:51:03,401 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 390 is 0.19114420902470308

2020-06-16 14:51:04,093 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 400 is 0.23429136782252075

2020-06-16 14:51:04,753 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 410 is 0.3091915352711053

2020-06-16 14:51:05,341 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 420 is 0.3085412437726808

2020-06-16 14:51:05,926 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 430 is 0.1737106400042126

2020-06-16 14:51:06,511 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 440 is 0.3145875972644301

2020-06-16 14:51:07,095 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 450 is 0.1544240222758328

2020-06-16 14:51:07,693 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 460 is 0.1352545519263702

2020-06-16 14:51:08,333 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 470 is 0.1574608120724036

2020-06-16 14:51:08,949 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 480 is 0.23101927637042874

2020-06-16 14:51:09,536 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 490 is 0.14578376937304377

2020-06-16 14:51:10,115 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 500 is 0.17652677681495976

2020-06-16 14:51:10,697 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 510 is 0.3031253004328281

2020-06-16 14:51:11,306 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 520 is 0.14470012914489644

2020-06-16 14:51:11,911 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 530 is 0.24180702043712884

2020-06-16 14:51:12,522 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 540 is 0.1729630061900123

2020-06-16 14:51:13,123 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 550 is 0.18872998582872164

2020-06-16 14:51:13,732 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 560 is 0.16581914694175226

2020-06-16 14:51:14,329 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 570 is 0.14788747451516826

2020-06-16 14:51:14,927 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 580 is 0.14185447876977653

2020-06-16 14:51:15,519 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 590 is 0.1528716307276027

2020-06-16 14:51:16,114 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 600 is 0.18508415079041363

2020-06-16 14:51:16,716 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 610 is 0.20646830648202208

2020-06-16 14:51:17,312 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 620 is 0.2054839469661207

2020-06-16 14:51:17,908 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 630 is 0.12136518096307675

2020-06-16 14:51:18,504 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 640 is 0.1384811180083995

2020-06-16 14:51:19,098 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 650 is 0.22838708703901578

2020-06-16 14:51:19,689 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 660 is 0.23245272007097734

2020-06-16 14:51:20,291 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 670 is 0.2474549112439109

2020-06-16 14:51:20,892 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 680 is 0.16911402470654258

2020-06-16 14:51:21,487 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 690 is 0.11809030152100755

2020-06-16 14:51:22,082 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 700 is 0.11964875035777563

2020-06-16 14:51:22,738 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 710 is 0.11223324589886388

2020-06-16 14:51:23,372 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 720 is 0.1211092107807411

2020-06-16 14:51:23,951 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 730 is 0.13355817125087244

2020-06-16 14:51:24,523 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 740 is 0.27260098501886415

2020-06-16 14:51:25,107 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 750 is 0.13253017485852184

2020-06-16 14:51:25,687 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 760 is 0.18337427328392075

2020-06-16 14:51:26,269 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 770 is 0.13634628770412333

2020-06-16 14:51:26,841 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 780 is 0.11676099747759174

2020-06-16 14:51:27,417 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 790 is 0.11967542712941293

2020-06-16 14:51:27,990 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 800 is 0.13854651964124196

2020-06-16 14:51:28,574 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 810 is 0.10711242238251545

2020-06-16 14:51:29,144 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 820 is 0.17957965551837385

2020-06-16 14:51:29,715 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 830 is 0.1383613681749293

2020-06-16 14:51:30,288 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 840 is 0.14405981280477284

2020-06-16 14:51:30,859 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 850 is 0.2188129406970884

2020-06-16 14:51:31,431 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 860 is 0.17995590618248594

2020-06-16 14:51:32,005 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 870 is 0.14418652451559316

2020-06-16 14:51:32,578 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 880 is 0.11007354801989132

2020-06-16 14:51:33,154 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 890 is 0.1669120244226313

2020-06-16 14:51:33,724 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 900 is 0.16918474448987547

2020-06-16 14:51:34,308 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 910 is 0.09381956963567518

2020-06-16 14:51:34,933 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 920 is 0.22555217287270918

2020-06-16 14:51:35,503 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 930 is 0.14373343204406627

2020-06-16 14:51:35,916 - [INFO] - from org.deeplearning4j.optimize.listeners.EvaluativeListener in main
                
Starting evaluation nr. 1

2020-06-16 14:51:38,169 - [INFO] - from org.deeplearning4j.optimize.listeners.EvaluativeListener in main
                
Reporting evaluation results:

2020-06-16 14:51:38,175 - [INFO] - from org.deeplearning4j.optimize.listeners.EvaluativeListener in main
                
Evaluation:


========================Evaluation Metrics========================
 # of classes:    10
 Accuracy:        0.9859
 Precision:       0.9860
 Recall:          0.9856
 F1 Score:        0.9858
Precision, recall & F1: macro-averaged (equally weighted avg. of 10 classes)


=========================Confusion Matrix=========================
    0    1    2    3    4    5    6    7    8    9
---------------------------------------------------
  968    0    2    0    0    0    5    2    2    1 | 0 = 0
    0 1128    2    0    0    1    3    1    0    0 | 1 = 1
    1    0 1027    0    0    0    0    4    0    0 | 2 = 2
    0    0    3 1002    0    1    0    3    1    0 | 3 = 3
    0    0    1    0  975    0    1    0    0    5 | 4 = 4
    2    0    1   19    0  867    1    2    0    0 | 5 = 5
    2    1    1    0    3    3  945    0    3    0 | 6 = 6
    1    2    6    3    2    0    0 1009    0    5 | 7 = 7
    1    0    3    5    3    2    0    1  952    7 | 8 = 8
    0    2    0    9    7    0    0    5    0  986 | 9 = 9

Confusion matrix format: Actual (rowClass) predicted as (columnClass) N times
==================================================================

2020-06-16 14:51:38,175 - [INFO] - from org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST in main
                
Saving model to tmp folder: /var/folders/qr/5nz9_zgs2213mpl7z6xwyk6h0000gn/T/lenetmnist.zip

2020-06-16 14:51:38,580 - [INFO] - from org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST in main
                
****************Example finished********************

2020-06-17 10:31:48,454 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 10:31:49,092 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 10:31:49,095 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 10:31:49,095 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 10:31:49,095 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 10:31:49,095 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 10:31:49,095 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 10:31:49,228 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 10:31:49,319 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 10:31:49,319 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 10:31:49,319 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 10:31:49,359 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

2020-06-17 10:31:49,616 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 0 is 2.4743148929526906

2020-06-17 10:31:50,253 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 10 is 1.1818032361490796

2020-06-17 10:31:50,873 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 20 is 0.570531356415932

2020-06-17 10:32:21,128 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 10:32:21,770 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 10:32:21,773 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 10:32:21,773 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 10:32:21,773 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 10:32:21,773 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 10:32:21,773 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 10:32:21,907 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 10:32:21,999 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 10:32:21,999 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 10:32:21,999 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 10:32:22,039 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

2020-06-17 10:32:22,293 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 0 is 2.4743148929526906

2020-06-17 10:35:01,596 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 10:35:02,254 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 10:35:02,258 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 10:35:02,258 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 10:35:02,258 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 10:35:02,258 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 10:35:02,259 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 10:35:02,395 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 10:35:02,487 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 10:35:02,488 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 10:35:02,488 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 10:35:02,528 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

2020-06-17 10:35:02,808 - [INFO] - from org.deeplearning4j.optimize.listeners.ScoreIterationListener in main
                
Score at iteration 0 is 2.4743148929526906

2020-06-17 14:02:40,041 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 14:02:40,813 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 14:02:40,816 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 14:02:40,816 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 14:02:40,816 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 14:02:40,816 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 14:02:40,816 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 14:02:40,953 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 14:02:41,047 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 14:02:41,047 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 14:02:41,047 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 14:03:36,351 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 14:03:36,979 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 14:03:36,981 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 14:03:36,981 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 14:03:36,981 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 14:03:36,981 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 14:03:36,982 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 14:03:37,113 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 14:03:37,202 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 14:03:37,203 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 14:03:37,203 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 14:30:44,313 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 14:30:44,957 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 14:30:44,960 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 14:30:44,960 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 14:30:44,960 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 14:30:44,960 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 14:30:44,960 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 14:30:45,092 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 14:30:45,184 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 14:30:45,184 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 14:30:45,184 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 14:30:59,136 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 14:30:59,773 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 14:30:59,776 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 14:30:59,776 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 14:30:59,776 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 14:30:59,776 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 14:30:59,776 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 14:30:59,908 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 14:30:59,998 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 14:30:59,998 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 14:30:59,998 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 14:31:32,233 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 14:31:32,858 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 14:31:32,861 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 14:31:32,861 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 14:31:32,861 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 14:31:32,861 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 14:31:32,861 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 14:31:32,993 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 14:31:33,082 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 14:31:33,083 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 14:31:33,083 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 14:34:09,425 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 14:34:10,049 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 14:34:10,052 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 14:34:10,052 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 14:34:10,052 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 14:34:10,052 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 14:34:10,052 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 14:34:10,183 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 14:34:10,274 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 14:34:10,274 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 14:34:10,274 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 14:35:09,508 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 14:35:10,637 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 14:35:10,641 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 14:35:10,642 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 14:35:10,642 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 14:35:10,642 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 14:35:10,642 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 14:35:10,797 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 14:35:10,936 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 14:35:10,937 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 14:35:10,937 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 14:44:56,893 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 14:44:57,675 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 14:44:57,678 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 14:44:57,678 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 14:44:57,678 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 14:44:57,678 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 14:44:57,678 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 14:44:57,815 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 14:44:57,911 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 14:44:57,911 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 14:44:57,912 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 14:52:45,289 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 14:52:45,937 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 14:52:45,940 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 14:52:45,940 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 14:52:45,940 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 14:52:45,940 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 14:52:45,940 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 14:52:46,071 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 14:52:46,161 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 14:52:46,161 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 14:52:46,161 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 15:12:43,403 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 15:12:44,192 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 15:12:44,195 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 15:12:44,195 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 15:12:44,195 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 15:12:44,195 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 15:12:44,195 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 15:12:44,332 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 15:12:44,428 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 15:12:44,428 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 15:12:44,428 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 15:13:03,608 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 15:13:04,256 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 15:13:04,259 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 15:13:04,259 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 15:13:04,259 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 15:13:04,260 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 15:13:04,260 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 15:13:04,393 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 15:13:04,485 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 15:13:04,485 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 15:13:04,485 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 15:13:47,944 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 15:13:48,702 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 15:13:48,705 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 15:13:48,705 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 15:13:48,705 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 15:13:48,706 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 15:13:48,706 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 15:13:48,849 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 15:13:48,944 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 15:13:48,945 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 15:13:48,945 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 15:14:03,194 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 15:14:03,816 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 15:14:03,819 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 15:14:03,819 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 15:14:03,819 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 15:14:03,819 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 15:14:03,819 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 15:14:03,950 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 15:14:04,040 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 15:14:04,040 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 15:14:04,040 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 15:23:22,871 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 15:23:23,525 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 15:23:23,528 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 15:23:23,528 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 15:23:23,528 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 15:23:23,528 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 15:23:23,528 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 15:23:23,659 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 15:23:23,750 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 15:23:23,750 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 15:23:23,750 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 15:37:42,451 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 15:37:43,094 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 15:37:43,097 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 15:37:43,097 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 15:37:43,097 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 15:37:43,097 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 15:37:43,097 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 15:37:43,227 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 15:37:43,317 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 15:37:43,317 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 15:37:43,318 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 15:38:17,904 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 15:38:18,527 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 15:38:18,530 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 15:38:18,530 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 15:38:18,530 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 15:38:18,530 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 15:38:18,530 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 15:38:18,661 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 15:38:18,751 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 15:38:18,751 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 15:38:18,751 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 15:38:50,541 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 15:38:51,181 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 15:38:51,184 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 15:38:51,184 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 15:38:51,184 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 15:38:51,185 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 15:38:51,185 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 15:38:51,317 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 15:38:51,408 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 15:38:51,408 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 15:38:51,408 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 15:39:45,596 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 15:39:46,230 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 15:39:46,233 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 15:39:46,233 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 15:39:46,233 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 15:39:46,233 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 15:39:46,234 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 15:39:46,366 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 15:39:46,458 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 15:39:46,458 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 15:39:46,458 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 15:40:03,750 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 15:40:04,428 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 15:40:04,431 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 15:40:04,431 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 15:40:04,431 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 15:40:04,431 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 15:40:04,431 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 15:40:04,566 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 15:40:04,659 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 15:40:04,659 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 15:40:04,659 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 15:40:36,153 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 15:40:36,790 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 15:40:36,793 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 15:40:36,794 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 15:40:36,794 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 15:40:36,794 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 15:40:36,794 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 15:40:36,925 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 15:40:37,015 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 15:40:37,015 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 15:40:37,015 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 15:41:18,805 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 15:41:19,443 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 15:41:19,446 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 15:41:19,446 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 15:41:19,446 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 15:41:19,446 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 15:41:19,446 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 15:41:19,578 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 15:41:19,671 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 15:41:19,671 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 15:41:19,671 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 15:43:10,675 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 15:43:11,309 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 15:43:11,312 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 15:43:11,312 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 15:43:11,312 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 15:43:11,312 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 15:43:11,312 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 15:43:11,445 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 15:43:11,536 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 15:43:11,536 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 15:43:11,536 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 15:43:50,491 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 15:43:51,118 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 15:43:51,121 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 15:43:51,121 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 15:43:51,121 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 15:43:51,121 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 15:43:51,121 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 15:43:51,254 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 15:43:51,346 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 15:43:51,346 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 15:43:51,346 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-17 15:47:22,794 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-17 15:47:23,435 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-17 15:47:23,438 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-17 15:47:23,438 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-17 15:47:23,438 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-17 15:47:23,438 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-17 15:47:23,438 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-17 15:47:23,569 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-17 15:47:23,666 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-17 15:47:23,667 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-17 15:47:23,667 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:10:10,576 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:10:11,213 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:10:11,216 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:10:11,216 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:10:11,216 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:10:11,216 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:10:11,216 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:10:11,349 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:10:11,440 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:10:11,440 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:10:11,440 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:11:28,850 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:11:29,493 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:11:29,496 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:11:29,496 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:11:29,496 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:11:29,496 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:11:29,496 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:11:29,628 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:11:29,720 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:11:29,721 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:11:29,721 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:11:43,833 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:11:44,481 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:11:44,484 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:11:44,484 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:11:44,484 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:11:44,484 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:11:44,484 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:11:44,617 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:11:44,708 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:11:44,708 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:11:44,708 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:11:56,767 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:11:57,424 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:11:57,427 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:11:57,427 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:11:57,427 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:11:57,427 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:11:57,428 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:11:57,562 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:11:57,653 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:11:57,653 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:11:57,653 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:12:33,197 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:12:33,848 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:12:33,851 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:12:33,851 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:12:33,851 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:12:33,851 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:12:33,851 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:12:33,983 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:12:34,074 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:12:34,074 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:12:34,074 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:13:00,341 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:13:00,982 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:13:00,985 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:13:00,985 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:13:00,985 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:13:00,985 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:13:00,985 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:13:01,117 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:13:01,208 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:13:01,208 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:13:01,208 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:13:59,437 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:14:00,095 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:14:00,098 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:14:00,098 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:14:00,098 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:14:00,098 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:14:00,098 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:14:00,231 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:14:00,321 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:14:00,321 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:14:00,321 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:14:12,006 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:14:12,661 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:14:12,664 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:14:12,664 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:14:12,664 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:14:12,664 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:14:12,664 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:14:12,799 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:14:12,888 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:14:12,888 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:14:12,888 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:14:26,422 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:14:27,074 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:14:27,076 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:14:27,076 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:14:27,077 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:14:27,077 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:14:27,077 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:14:27,210 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:14:27,300 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:14:27,300 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:14:27,301 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:15:44,055 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:15:44,673 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:15:44,676 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:15:44,676 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:15:44,676 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:15:44,676 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:15:44,676 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:15:44,810 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:15:44,901 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:15:44,901 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:15:44,901 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:15:49,292 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:15:49,932 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:15:49,935 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:15:49,935 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:15:49,935 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:15:49,935 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:15:49,935 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:15:50,067 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:15:50,159 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:15:50,159 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:15:50,159 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:16:55,249 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:16:55,899 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:16:55,902 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:16:55,902 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:16:55,902 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:16:55,902 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:16:55,902 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:16:56,034 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:16:56,123 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:16:56,124 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:16:56,124 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:17:20,277 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:17:20,911 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:17:20,913 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:17:20,914 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:17:20,914 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:17:20,914 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:17:20,914 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:17:21,045 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:17:21,136 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:17:21,136 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:17:21,136 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:17:45,909 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:17:46,529 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:17:46,532 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:17:46,532 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:17:46,532 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:17:46,532 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:17:46,532 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:17:46,663 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:17:46,753 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:17:46,754 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:17:46,754 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:19:01,858 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:19:02,509 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:19:02,512 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:19:02,512 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:19:02,512 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:19:02,512 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:19:02,512 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:19:02,645 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:19:02,736 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:19:02,736 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:19:02,736 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:20:42,825 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:20:43,489 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:20:43,492 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:20:43,492 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:20:43,492 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:20:43,492 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:20:43,492 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:20:43,627 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:20:43,720 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:20:43,721 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:20:43,721 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:21:12,824 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:21:13,430 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:21:13,434 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:21:13,434 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:21:13,434 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:21:13,434 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:21:13,434 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:21:13,568 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:21:13,660 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:21:13,660 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:21:13,660 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:21:13,729 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

2020-06-18 10:22:47,477 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:22:48,129 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:22:48,133 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:22:48,133 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:22:48,133 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:22:48,133 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:22:48,133 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:22:48,270 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:22:48,361 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:22:48,361 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:22:48,361 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:22:48,430 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

2020-06-18 10:35:53,462 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:35:54,083 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:35:54,086 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:35:54,086 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:35:54,086 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:35:54,087 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:35:54,087 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:35:54,221 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:35:54,313 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:35:54,314 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:35:54,314 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:35:54,384 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

2020-06-18 10:41:44,006 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:41:44,772 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:41:44,775 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:41:44,775 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:41:44,775 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:41:44,775 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:41:44,775 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:41:44,910 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:41:45,001 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:41:45,001 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:41:45,001 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:41:45,076 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

2020-06-18 10:43:39,021 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:43:39,594 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:43:39,597 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:43:39,598 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:43:39,598 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:43:39,598 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:43:39,598 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:43:39,733 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:43:39,823 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:43:39,824 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:43:39,824 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:43:39,901 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

2020-06-18 10:43:54,402 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:43:54,985 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:43:54,988 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:43:54,988 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:43:54,988 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:43:54,988 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:43:54,988 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:43:55,123 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:43:55,214 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:43:55,214 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:43:55,214 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:43:55,273 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

2020-06-18 10:46:23,635 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:46:24,216 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:46:24,220 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:46:24,220 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:46:24,220 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:46:24,220 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:46:24,220 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:46:24,354 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:46:24,443 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:46:24,444 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:46:24,444 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:46:24,507 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

2020-06-18 10:47:24,362 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:47:24,945 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:47:24,948 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:47:24,949 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:47:24,949 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:47:24,949 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:47:24,949 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:47:25,081 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:47:25,171 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:47:25,172 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:47:25,172 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:47:25,236 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

2020-06-18 10:48:01,668 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:48:02,257 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:48:02,261 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:48:02,261 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:48:02,261 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:48:02,261 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:48:02,261 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:48:02,402 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:48:02,492 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:48:02,492 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:48:02,492 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:48:02,553 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

2020-06-18 10:48:40,295 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:48:40,931 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:48:40,935 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:48:40,935 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:48:40,935 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:48:40,935 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:48:40,935 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:48:41,069 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:48:41,161 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:48:41,161 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:48:41,161 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:48:41,229 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

2020-06-18 10:48:48,773 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:48:49,341 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:48:49,344 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:48:49,345 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:48:49,345 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:48:49,345 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:48:49,345 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:48:49,478 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:48:49,568 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:48:49,569 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:48:49,569 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:48:49,631 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

2020-06-18 10:55:19,377 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:55:19,958 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:55:19,962 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:55:19,962 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:55:19,962 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:55:19,962 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:55:19,962 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:55:20,095 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:55:20,185 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:55:20,185 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:55:20,185 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:55:20,247 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

2020-06-18 10:55:39,151 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:55:39,905 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:55:39,911 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:55:39,911 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:55:39,911 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:55:39,911 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:55:39,911 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:55:40,163 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:55:40,259 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:55:40,260 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:55:40,260 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:55:40,340 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

2020-06-18 10:55:54,835 - [INFO] - from org.nd4j.linalg.factory.Nd4jBackend in main
                
Loaded [CpuBackend] backend

2020-06-18 10:55:55,625 - [INFO] - from org.nd4j.nativeblas.NativeOpsHolder in main
                
Number of threads used for linear algebra: 1

2020-06-18 10:55:55,629 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*********************************** CPU Feature Check Warning ***********************************

2020-06-18 10:55:55,629 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support

2020-06-18 10:55:55,629 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details

2020-06-18 10:55:55,629 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning

2020-06-18 10:55:55,629 - [WARN] - from org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory in main
                
*************************************************************************************************

2020-06-18 10:55:55,768 - [INFO] - from org.nd4j.nativeblas.Nd4jBlas in main
                
Number of threads used for OpenMP BLAS: 8

2020-06-18 10:55:55,868 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Backend used: [CPU]; OS: [Mac OS X]

2020-06-18 10:55:55,868 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Cores: [16]; Memory: [14.2GB];

2020-06-18 10:55:55,868 - [INFO] - from org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner in main
                
Blas vendor: [OPENBLAS]

2020-06-18 10:55:55,931 - [INFO] - from org.deeplearning4j.nn.multilayer.MultiLayerNetwork in main
                
Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]

